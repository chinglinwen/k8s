### Namespace ###
kind: Namespace
apiVersion: v1
metadata:
  name: conduit

### Service Account Controller ###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: conduit-controller
  namespace: conduit

### RBAC ###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-controller
rules:
- apiGroups: ["extensions"]
  resources: ["deployments", "replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services"]
  verbs: ["list", "get", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-controller
  namespace: conduit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: conduit-controller
subjects:
- kind: ServiceAccount
  name: conduit-controller
  namespace: conduit

### Service Account Prometheus ###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: conduit-prometheus
  namespace: conduit

### RBAC ###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-prometheus
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-prometheus
  namespace: conduit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: conduit-prometheus
subjects:
- kind: ServiceAccount
  name: conduit-prometheus
  namespace: conduit

### Controller ###
---
kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: conduit
  labels:
    conduit.io/control-plane-component: controller
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085

---
kind: Service
apiVersion: v1
metadata:
  name: proxy-api
  namespace: conduit
  labels:
    conduit.io/control-plane-component: controller
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: controller
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: controller
  name: controller
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli v0.3.1
        conduit.io/proxy-version: v0.3.1
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: controller
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - public-api
        - -controller-namespace=conduit
        - -log-level=info
        - -logtostderr=true
        image: chinglinwen/gcr.io-runconduit-controller:v0.3.1
        imagePullPolicy: IfNotPresent
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        resources: {}
      - args:
        - destination
        - -log-level=info
        - -logtostderr=true
        image: chinglinwen/gcr.io-runconduit-controller:v0.3.1
        imagePullPolicy: IfNotPresent
        name: destination
        ports:
        - containerPort: 8089
          name: grpc
        - containerPort: 9999
          name: admin-http
        resources: {}
      - args:
        - proxy-api
        - -log-level=info
        - -logtostderr=true
        image: chinglinwen/gcr.io-runconduit-controller:v0.3.1
        imagePullPolicy: IfNotPresent
        name: proxy-api
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        resources: {}
      - args:
        - tap
        - -log-level=info
        - -logtostderr=true
        image: chinglinwen/gcr.io-runconduit-controller:v0.3.1
        imagePullPolicy: IfNotPresent
        name: tap
        ports:
        - containerPort: 8088
          name: grpc
        - containerPort: 9998
          name: admin-http
        resources: {}
      - args:
        - telemetry
        - -ignore-namespaces=kube-system
        - -prometheus-url=http://prometheus.conduit.svc.cluster.local:9090
        - -log-level=info
        - -logtostderr=true
        image: chinglinwen/gcr.io-runconduit-controller:v0.3.1
        imagePullPolicy: IfNotPresent
        name: telemetry
        ports:
        - containerPort: 8087
          name: grpc
        - containerPort: 9997
          name: admin-http
        resources: {}
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://localhost:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: chinglinwen/gcr.io-runconduit-proxy:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: chinglinwen/gcr.io-runconduit-proxy-init:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
      serviceAccount: conduit-controller
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: web
  namespace: conduit
  labels:
    conduit.io/control-plane-component: web
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: web
  ports:
  - name: http
    port: 8084
    targetPort: 8084
  - name: admin-http
    port: 9994
    targetPort: 9994

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: web
  name: web
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli v0.3.1
        conduit.io/proxy-version: v0.3.1
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: web
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - -api-addr=api.conduit.svc.cluster.local:8085
        - -static-dir=/dist
        - -template-dir=/templates
        - -uuid=e3b0ee41-7203-4458-b1e5-fd69de6ec3be
        - -controller-namespace=conduit
        - -log-level=info
        image: chinglinwen/gcr.io-runconduit-web:v0.3.1
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8084
          name: http
        - containerPort: 9994
          name: admin-http
        resources: {}
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://proxy-api.conduit.svc.cluster.local:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: chinglinwen/gcr.io-runconduit-proxy:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: chinglinwen/gcr.io-runconduit-proxy-init:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: conduit
  labels:
    conduit.io/control-plane-component: prometheus
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: prometheus
  name: prometheus
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli v0.3.1
        conduit.io/proxy-version: v0.3.1
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: prometheus
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - --storage.tsdb.retention=6h
        - --config.file=/etc/prometheus/prometheus.yml
        image: chinglinwen/prom-prometheus:v2.1.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-config
          readOnly: true
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://proxy-api.conduit.svc.cluster.local:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: chinglinwen/gcr.io-runconduit-proxy:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: chinglinwen/gcr.io-runconduit-proxy-init:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
      serviceAccount: conduit-prometheus
      volumes:
      - configMap:
          name: prometheus-config
        name: prometheus-config
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: prometheus-config
  namespace: conduit
  labels:
    conduit.io/control-plane-component: prometheus
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      evaluation_interval: 10s

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['conduit']
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: ^admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: job

### Grafana ###
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: conduit
  labels:
    conduit.io/control-plane-component: grafana
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: grafana
  name: grafana
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli v0.3.1
        conduit.io/proxy-version: v0.3.1
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: grafana
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - image: chinglinwen/grafana-grafana:5.0.0-beta4
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: true
        - mountPath: /var/lib/grafana/dashboards
          name: grafana-dashboards
        - mountPath: /usr/share/grafana/public/dashboards
          name: grafana-dashboard-home
          readOnly: true
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://proxy-api.conduit.svc.cluster.local:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: chinglinwen/gcr.io-runconduit-proxy:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: chinglinwen/gcr.io-runconduit-proxy-init:v0.3.1
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
      volumes:
      - configMap:
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml
          - key: dashboards.yaml
            path: provisioning/dashboards/dashboards.yaml
          name: grafana-config
        name: grafana-config
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          items:
          - key: conduit-viz.json
            path: home.json
          name: grafana-dashboards
        name: grafana-dashboard-home
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: grafana-config
  namespace: conduit
  labels:
    conduit.io/control-plane-component: grafana
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
data:
  grafana.ini: |-
    instance_name = conduit-grafana

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://prometheus.conduit.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: conduit-viz

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: grafana-dashboards
  namespace: conduit
  labels:
    conduit.io/control-plane-component: grafana
  annotations:
    conduit.io/created-by: conduit/cli v0.3.1
data:
  conduit-viz.json: |-
    {
      "rows": [
        {
          "collapse": false,
          "height": "50px",
          "panels": [
            {
              "content": "<div>\n  <div style=\"position: absolute; top: 0, left: 0\">\n    <a href=\"https://conduit.io\" target=\"_blank\"><img src=\"https://conduit.io/images/conduit-primary-white.svg\" style=\"height: 30px;\"></a>\n  </div>\n  <div style=\"position: absolute; top: 0; right: 0; font-size: 15px\">\n    <a href=\"https://conduit.io\" target=\"_blank\">Conduit</a> is a next-generation ultralight service mesh for Kubernetes.\n    <br>\n    Need help? Visit <a href=\"https://conduit.io\" target=\"_blank\">conduit.io</a>.\n  </div>\n</div>",
              "height": "1px",
              "id": 14,
              "links": [],
              "mode": "html",
              "span": 12,
              "title": "",
              "transparent": true,
              "type": "text"
            }
          ],
          "showTitle": false
        },
        {
          "collapse": false,
          "height": 250,
          "panels": [
            {
              "legend": {
              },
              "lines": true,
              "targets": [
                {
                  "expr": "sum(irate(responses_total[20s])) by (target_deployment)",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "{{target_deployment}}",
                  "refId": "A"
                }
              ],
              "title": "Request Volume",
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "rps",
                  "show": true
                },
                {
                  "show": true
                }
              ]
            }
          ],
          "showTitle": false
        }
      ],
      "refresh": "5s",
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "title": "conduit-viz"
    }


  conduit-health.json: |-
    {
      "title": "conduit-health"
    }

---
