apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    creationTimestamp: 2018-05-22T08:07:18Z
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "677"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/kube-proxy
    uid: 25498e80-5d97-11e8-ac5e-f403434a5520
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          image: k8s.gcr.io/kube-proxy-amd64:v1.10.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    templateGeneration: 1
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"k8s-app":"kube-router","tier":"node"},"name":"kube-router","namespace":"kube-system"},"spec":{"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kube-router","tier":"node"}},"spec":{"containers":[{"args":["--run-router=true","--run-firewall=true","--run-service-proxy=true","--kubeconfig=/var/lib/kube-router/kubeconfig"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"reg.qianbao-inc.com/k8s/kube-router","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":20244},"initialDelaySeconds":10,"periodSeconds":3},"name":"kube-router","resources":{"requests":{"cpu":"250m","memory":"250Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/lib/modules","name":"lib-modules","readOnly":true},{"mountPath":"/etc/cni/net.d","name":"cni-conf-dir"},{"mountPath":"/var/lib/kube-router","name":"kubeconfig","readOnly":true}]}],"hostNetwork":true,"initContainers":[{"command":["/bin/sh","-c","set -e -x; if [ ! -f /etc/cni/net.d/10-kuberouter.conf ]; then TMP=/etc/cni/net.d/.tmp-kuberouter-cfg; cp /etc/kube-router/cni-conf.json ${TMP}; mv ${TMP} /etc/cni/net.d/10-kuberouter.conf; fi"],"image":"reg.qianbao-inc.com/k8s/busybox","imagePullPolicy":"Always","name":"install-cni","volumeMounts":[{"mountPath":"/etc/cni/net.d","name":"cni-conf-dir"},{"mountPath":"/etc/kube-router","name":"kube-router-cfg"}]}],"serviceAccount":"kube-router","serviceAccountName":"kube-router","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/etc/cni/net.d"},"name":"cni-conf-dir"},{"configMap":{"name":"kube-router-cfg"},"name":"kube-router-cfg"},{"configMap":{"items":[{"key":"kubeconfig.conf","path":"kubeconfig"}],"name":"kube-proxy"},"name":"kubeconfig"}]}}}}
    creationTimestamp: 2018-05-22T08:11:51Z
    generation: 1
    labels:
      k8s-app: kube-router
      tier: node
    name: kube-router
    namespace: kube-system
    resourceVersion: "895"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/kube-router
    uid: c86a3e43-5d97-11e8-ac5e-f403434a5520
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-router
        tier: node
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-router
          tier: node
      spec:
        containers:
        - args:
          - --run-router=true
          - --run-firewall=true
          - --run-service-proxy=true
          - --kubeconfig=/var/lib/kube-router/kubeconfig
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: reg.qianbao-inc.com/k8s/kube-router
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 20244
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: kube-router
          resources:
            requests:
              cpu: 250m
              memory: 250Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /etc/cni/net.d
            name: cni-conf-dir
          - mountPath: /var/lib/kube-router
            name: kubeconfig
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/sh
          - -c
          - set -e -x; if [ ! -f /etc/cni/net.d/10-kuberouter.conf ]; then TMP=/etc/cni/net.d/.tmp-kuberouter-cfg;
            cp /etc/kube-router/cni-conf.json ${TMP}; mv ${TMP} /etc/cni/net.d/10-kuberouter.conf;
            fi
          image: reg.qianbao-inc.com/k8s/busybox
          imagePullPolicy: Always
          name: install-cni
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/cni/net.d
            name: cni-conf-dir
          - mountPath: /etc/kube-router
            name: kube-router-cfg
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-router
        serviceAccountName: kube-router
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-conf-dir
        - configMap:
            defaultMode: 420
            name: kube-router-cfg
          name: kube-router-cfg
        - configMap:
            defaultMode: 420
            items:
            - key: kubeconfig.conf
              path: kubeconfig
            name: kube-proxy
          name: kubeconfig
    templateGeneration: 1
    updateStrategy:
      type: OnDelete
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
